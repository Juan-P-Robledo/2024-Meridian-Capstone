<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>u_shows</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Check for Duplicate Scripts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    // Retrieve and process the name field
    var nameField = current.name.toString().toLowerCase().replace(/\s+/g, '');

    // Query the table for records with the same normalized name
    var duplicateCheck = new GlideRecord('u_shows'); // Replace 'your_table_name' with the actual table name
    duplicateCheck.addQuery('name', current.name); // Look for records with the same name
    duplicateCheck.addQuery('sys_id', '!=', current.sys_id); // Exclude the current record
    duplicateCheck.query();

    var duplicates = [];
    var oldestRecord = null;

    // Find all duplicates and determine the oldest record
    while (duplicateCheck.next()) {
        duplicates.push(duplicateCheck.sys_id.toString());
        if (!oldestRecord || new GlideDateTime(duplicateCheck.sys_created_on) < new GlideDateTime(oldestRecord.sys_created_on)) {
            oldestRecord = duplicateCheck;
        }
    }

    // If duplicates are found
    if (duplicates.length > 0) {
        // Remove the oldest record from the duplicates array
        var index = duplicates.indexOf(oldestRecord.sys_id.toString());
        if (index !== -1) {
            duplicates.splice(index, 1);
        }

        // Delete all duplicates except the oldest
        duplicates.forEach(function(sys_id) {
            var record = new GlideRecord('u_shows');
            if (record.get(sys_id)) {
                gs.addInfoMessage('Deleting duplicate record: ' + record.name);
                record.deleteRecord();
            }
        });
    }
})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-12 16:49:41</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d8deda34473ac21057c9cbb9316d43ec</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check for Duplicate Scripts</sys_name>
        <sys_overrides/>
        <sys_package display_value="Show recommendations" source="9800e6e247e2021057c9cbb9316d43b6">9800e6e247e2021057c9cbb9316d43b6</sys_package>
        <sys_policy/>
        <sys_scope display_value="Show recommendations">9800e6e247e2021057c9cbb9316d43b6</sys_scope>
        <sys_update_name>sys_script_d8deda34473ac21057c9cbb9316d43ec</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-12 16:49:41</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=d8deda34473ac21057c9cbb9316d43ec"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Show recommendations">9800e6e247e2021057c9cbb9316d43b6</application>
        <file_path/>
        <instance_id>df142059db6a319805ef172913961986</instance_id>
        <instance_name>dev212312</instance_name>
        <name>sys_script_d8deda34473ac21057c9cbb9316d43ec</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;u_shows&lt;/collection&gt;&lt;condition/&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition/&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Check for Duplicate Scripts&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous /*null when async*/) {
    // Retrieve and process the name field
    var nameField = current.name.toString().toLowerCase().replace(/\s+/g, '');

    // Query the table for records with the same normalized name
    var duplicateCheck = new GlideRecord('u_shows'); // Replace 'your_table_name' with the actual table name
    duplicateCheck.addQuery('name', current.name); // Look for records with the same name
    duplicateCheck.addQuery('sys_id', '!=', current.sys_id); // Exclude the current record
    duplicateCheck.query();

    var duplicates = [];
    var oldestRecord = null;

    // Find all duplicates and determine the oldest record
    while (duplicateCheck.next()) {
        duplicates.push(duplicateCheck.sys_id.toString());
        if (!oldestRecord || new GlideDateTime(duplicateCheck.sys_created_on) &lt; new GlideDateTime(oldestRecord.sys_created_on)) {
            oldestRecord = duplicateCheck;
        }
    }

    // If duplicates are found
    if (duplicates.length &gt; 0) {
        // Remove the oldest record from the duplicates array
        var index = duplicates.indexOf(oldestRecord.sys_id.toString());
        if (index !== -1) {
            duplicates.splice(index, 1);
        }

        // Delete all duplicates except the oldest
        duplicates.forEach(function(sys_id) {
            var record = new GlideRecord('u_shows');
            if (record.get(sys_id)) {
                gs.addInfoMessage('Deleting duplicate record: ' + record.name);
                record.deleteRecord();
            }
        });
    }
})(current, previous);
]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2024-06-12 16:49:41&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;d8deda34473ac21057c9cbb9316d43ec&lt;/sys_id&gt;&lt;sys_mod_count&gt;0&lt;/sys_mod_count&gt;&lt;sys_name&gt;Check for Duplicate Scripts&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Show recommendations" source="9800e6e247e2021057c9cbb9316d43b6"&gt;9800e6e247e2021057c9cbb9316d43b6&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Show recommendations"&gt;9800e6e247e2021057c9cbb9316d43b6&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_d8deda34473ac21057c9cbb9316d43ec&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2024-06-12 16:49:41&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;before&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=d8deda34473ac21057c9cbb9316d43ec"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>1339910746</payload_hash>
        <record_name>Check for Duplicate Scripts</record_name>
        <reverted_from/>
        <source>88eef93c4776c21057c9cbb9316d431f</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-12 16:49:41</sys_created_on>
        <sys_id>5cdeda34473ac21057c9cbb9316d43ef</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1900d5aed640000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-12 16:49:41</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>10deda34673ac210bdc5e67dc01389ef</update_guid>
        <update_guid_history>10deda34673ac210bdc5e67dc01389ef:1339910746</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-12 16:50:16</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>0d605dca6dc749468691d1364604d544</sys_id>
        <sys_metadata>d8deda34473ac21057c9cbb9316d43ec</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Check for Duplicate Scripts</sys_name>
        <sys_package display_value="Show recommendations" source="9800e6e247e2021057c9cbb9316d43b6">9800e6e247e2021057c9cbb9316d43b6</sys_package>
        <sys_parent display_value="Shows">b380aee64726021057c9cbb9316d438d</sys_parent>
        <sys_policy/>
        <sys_scope display_value="Show recommendations">9800e6e247e2021057c9cbb9316d43b6</sys_scope>
        <sys_scope_delete display_value="">b582729584a64c04977867726fcd2a19</sys_scope_delete>
        <sys_update_name>sys_script_d8deda34473ac21057c9cbb9316d43ec</sys_update_name>
        <sys_update_version display_value="sys_script_d8deda34473ac21057c9cbb9316d43ec">5cdeda34473ac21057c9cbb9316d43ef</sys_update_version>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-12 16:50:16</sys_updated_on>
    </sys_metadata_delete>
</record_update>
